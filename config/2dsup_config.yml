comment = ""
debug = True

[train]
model_path = temp{}

# Whether to load a pretrained model or not
preload_model = False

# path to the pre-trained model
pretrain_model_path = "trained_models/temp1.pth"

# Proportion of the dataset to be used while training, use 100
proportion = 100

# Number of epochs to run during training
num_epochs = 400

# batch size, based on the GPU memory
batch_size = 100

# hidden size of RNN
hidden_size = 2048

# Output feature size from CNN
input_size = 2048

# Number of batches to be collected before the network update
num_traj = 1

# Canvas shape, keep it 64
canvas_shape = 64

# Learning rate
lr = 0.001

# Optimizer: RL training -> "sgd" or supervised training -> "adam"
optim = adam

# Epsilon for the RL training, not applicable in Supervised training
epsilon = 1

# l2 Weight decay
weight_decay = 0.0

# dropout for Decoder network
dropout = 0.2

# Encoder dropout
encoder_drop = 0.2

# Whether to schedule the learning rate or not
lr_sch = True

# Number of epochs to wait before decaying the learning rate.
patience = 8

# Mode of training, 1: supervised, 2: RL
mode = 1